@page "/novocliente"

<h3>NovoCliente</h3>

<PageTitle>Novo Cliente</PageTitle>
<div class="row justify-content-center">
    <div class="col-6">
        <EditForm Model="cliente" OnValidSubmit="AdicionarCliente">
            <h3>Novo Cliente</h3>

            <div class="mb-3">
                <label for="Nome" class="form-label">Nome</label>
                <InputText id="Nome" @bind-Value="cliente.Nome" class="form-control" />
            </div>

            <div class="mb-3">
                <label for="DataNascimento" class="form-label">Data de Nascimento</label>
                <InputDate id="DataNascimento" @bind-Value="cliente.DataNascimento" class="form-control" />
            </div>

            <div class="mb-3">
                <label for="ClienteAtivo">Ativo</label>
                <InputCheckbox id="ClienteAtivo" @bind-Value="cliente.ClienteAtivo" />
            </div>

            <div class="mb-3">
                <button class="btn btn-primary shadow-none">
                    Enviar
                </button>
                <a href="/clientes" class="btn btn-secondary ms-3" data-enhance-nav="false">
                    Retornar para clientes
                </a>
            </div>

            <DataAnnotationsValidator />
            <ValidationSummary />
        </EditForm>
    </div>
</div>

@code {
    public Cliente cliente { get; set; } = new Cliente();

    protected override void OnInitialized() =>
        cliente = new Cliente { DataNascimento = DateTime.Now, ClienteAtivo = false };

    private async Task AdicionarCliente()
    {
        await ClienteRepository.AdicionarCliente(cliente);
        navigation.NavigateTo("/clientes");
    }
}
